{"version":3,"sources":["services/api-service.js","components/images-markup.js","index.js"],"names":["ImageApiService","constructor","searchQuery","page","perPage","fetchImages","queryParams","URLSearchParams","key","q","image_type","orientation","safesearch","per_page","fetch","BASE_URL","then","response","json","query","newQuery","incrementPage","getPage","resetPage","makeImagesMarkup","images","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","poster","emptyImg","join","refs","form","document","querySelector","searchBtn","gallery","loadMoreBtn","imageApiService","onSearch","e","preventDefault","classList","add","disabled","currentTarget","elements","value","trim","clearGallery","alert","getPromise","data","totalHits","hits","length","renderImages","remove","catch","err","handleError","markup","insertAdjacentHTML","innerHTML","console","log","message","onLoadMore","addEventListener"],"mappings":"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","file":"src.119f58e7.js","sourceRoot":"../src","sourcesContent":["export default class ImageApiService {\r\n  BASE_URL = 'https://pixabay.com/api/';\r\n\r\n  constructor() {\r\n    this.searchQuery = '';\r\n    this.page = 1;\r\n    this.perPage = 40;\r\n  }\r\n    \r\n  fetchImages() {\r\n    // console.log(this);\r\n    const queryParams = new URLSearchParams({\r\n      key: '25731511-e5f7726e83d52bf5fe5f97cfd',\r\n      q: this.searchQuery,\r\n      image_type: 'photo',\r\n      orientation: 'horizontal',\r\n      safesearch: true,\r\n      page: this.page,\r\n      per_page: this.perPage,\r\n    })\r\n\r\n    return fetch(`${this.BASE_URL}?${queryParams}`)\r\n      .then(response => response.json())\r\n  }\r\n\r\n  get query() {\r\n    return this.searchQuery;\r\n  }\r\n\r\n  set query(newQuery) {\r\n    this.searchQuery = newQuery;\r\n  }\r\n\r\n  incrementPage() {\r\n    this.page += 1;\r\n  }\r\n\r\n  getPage() {\r\n    return this.page;\r\n  }\r\n\r\n  resetPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n}","export default makeImagesMarkup;\r\nimport emptyImg from '../images/image-not-found.jpg';\r\n\r\nfunction makeImagesMarkup(images) {\r\n\r\n  return images.\r\n    map(({\r\n      webformatURL,\r\n      largeImageURL,\r\n      tags,\r\n      likes,\r\n      views,\r\n      comments,\r\n      downloads\r\n    }) => {\r\n      let poster = emptyImg;\r\n      if (webformatURL) {\r\n        poster = webformatURL;\r\n      }\r\n      return `<div class=\"photo-card\">\r\n      <img src=\"${poster}\" alt=\"${tags}\" loading=\"lazy\" width=\"150\" />\r\n        <div class=\"info\">\r\n          <p class=\"info-item\">\r\n            <b>Likes ${likes}</b>\r\n          </p>\r\n          <p class=\"info-item\">\r\n            <b>Views ${views}</b>\r\n          </p>\r\n          <p class=\"info-item\">\r\n            <b>Comments ${comments}</b>\r\n          </p>\r\n          <p class=\"info-item\">\r\n            <b>Downloads ${downloads}</b>\r\n          </p>\r\n        </div>\r\n    </div>`\r\n    })\r\n    .join('');\r\n}","import './sass/main.scss';\r\nimport ImageApiService from './services/api-service';\r\nimport makeImagesMarkup from './components/images-markup'\r\n\r\nconst refs = {\r\n  form: document.querySelector('#search-form'),\r\n  searchBtn: document.querySelector('button[type=\"submit\"]'),\r\n  gallery: document.querySelector('.gallery'),\r\n  loadMoreBtn: document.querySelector('.load-more')\r\n}\r\nconst imageApiService = new ImageApiService();\r\n\r\nrefs.form.addEventListener('submit', onSearch);\r\nrefs.loadMoreBtn.addEventListener('click', onLoadMore);\r\n\r\n\r\nfunction onSearch (e) {\r\n  e.preventDefault();\r\n  refs.loadMoreBtn.classList.add('is-hidden');\r\n  refs.loadMoreBtn.disabled = true;\r\n\r\n  imageApiService.query = e.currentTarget.elements.searchQuery.value.trim();\r\n  \r\n  imageApiService.resetPage();\r\n  clearGallery();\r\n\r\n  if (imageApiService.query === '') {\r\n    return alert ('Пустая строка');\r\n  }\r\n  getPromise();\r\n}\r\n\r\nfunction getPromise() {\r\n  imageApiService.fetchImages()\r\n    .then(data => {\r\n      if (imageApiService.page * imageApiService.perPage >= data.totalHits) {\r\n        refs.loadMoreBtn.classList.add('is-hidden');\r\n        return alert ('We are sorry, but you have reached the end of search results.');\r\n      } \r\n    imageApiService.incrementPage();\r\n    if (data.hits.length === 0) {\r\n      return alert ('Неправильный запрос');\r\n    }\r\n    renderImages(data.hits);\r\n    refs.loadMoreBtn.classList.remove('is-hidden');\r\n    refs.loadMoreBtn.disabled = false;\r\n  })\r\n    .catch(err => handleError(err));\r\n}\r\n\r\nfunction renderImages (hits) {\r\n  const markup = makeImagesMarkup(hits);\r\n  refs.gallery.insertAdjacentHTML('beforeend', markup);\r\n}\r\n\r\nfunction handleError (err) {\r\n  refs.gallery.innerHTML = '';\r\n  console.log(err.message);\r\n  refs.loadMoreBtn.classList.add('is-hidden');\r\n\r\n}\r\n\r\nfunction onLoadMore() {\r\n  refs.loadMoreBtn.disabled = true;\r\n  getPromise();\r\n}\r\n\r\nfunction clearGallery() {\r\n  refs.gallery.innerHTML = '';\r\n}"]}